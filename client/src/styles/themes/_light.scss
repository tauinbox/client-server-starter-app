@use '@angular/material' as mat;
@use 'abstracts/functions' as func;
@include mat.core();

// Define light theme palettes
$light-primary: mat.m2-define-palette(mat.$m2-teal-palette, 600);
$light-accent: mat.m2-define-palette(mat.$m2-deep-orange-palette, A400);
$light-warn: mat.m2-define-palette(mat.$m2-red-palette);

// Define state palettes
$light-success: mat.m2-define-palette(mat.$m2-green-palette, 500);
$light-info: mat.m2-define-palette(mat.$m2-blue-palette, 500);
$light-warning: mat.m2-define-palette(mat.$m2-orange-palette, 500);

$light-theme: mat.m2-define-light-theme(
  (
    color: (
      primary: $light-primary,
      accent: $light-accent,
      warn: $light-warn
    ),
    typography: mat.m2-define-typography-config(),
    density: 0
  )
);

:root {
  @include mat.all-component-themes($light-theme);

  // Common theme settings
  --color-scheme: light;

  // Theme-specific colors
  --color-primary: #{mat.m2-get-color-from-palette($light-primary)};
  --color-accent: #{mat.m2-get-color-from-palette($light-accent)};
  --color-warn: #{mat.m2-get-color-from-palette($light-warn)};

  // State colors
  --color-success: #{mat.m2-get-color-from-palette($light-success)};
  --color-info: #{mat.m2-get-color-from-palette($light-info)};
  --color-warning: #{mat.m2-get-color-from-palette($light-warning)};
  --color-error: #{mat.m2-get-color-from-palette($light-warn)};

  // UI colors
  --color-background: #fafafa;
  --color-surface: #ffffff;
  --color-text-primary: rgba(0, 0, 0, 0.87);
  --color-text-secondary: rgba(0, 0, 0, 0.6);
  --color-text-tertiary: rgba(0, 0, 0, 0.38);
  --color-border: rgba(0, 0, 0, 0.12);
  --color-divider: rgba(0, 0, 0, 0.12);
  --color-disabled: rgba(0, 0, 0, 0.38);
}
